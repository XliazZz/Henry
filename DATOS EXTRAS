//En JavaScript, puedes determinar el tipo de una variable o un valor con el operador typeof, de la siguiente manera:
 
typeof 3 === 'string'
typeof '3' === 'number'


//El operador de estricta desigualdad !== es el opuesto lógico del operador de estricta igualdad.

3 !==  3  // false
3 !== '3' // true
4 !==  3  // true


//La segunda manera de acceder a las propiedades de un objeto es con la notación de corchetes ([]). 
//Si la propiedad del objeto al que intentas acceder tiene un espacio en el nombre, necesitarás usar notación de corchetes.


//a función parseInt() analiza una cadena y devuelve un entero. A continuación, te presentamos un ejemplo:

const a = parseInt("007");
//La función anterior convierte la cadena 007 al entero 7. 
//Si el primer carácter de la cadena no puede ser convertido en un número, entonces devuelve NaN.


//El operador condicional, también llamado el operador ternario, 
//puede utilizarse como una expresión if-else de una sola línea.

unction findGreater(a, b) {
  if(a > b) {
    return "a is greater";
  }
  else {
    return "b is greater or equal";
  }
}

//Esto puede reescribirse usando el operador condicional:

function findGreater(a, b) {
  return a > b ? "a is greater" : "b is greater or equal";
}

